/**
 * Autogenerated by Thrift Compiler (0.19.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.unify.osx.turret.api;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
public class TurretApiConstants {

  /**
   * Action performed successfully
   */
  public static final int Ok = 0;

  /**
   * One of the provided arguments has invalid value. Please refer to the description of the called function for more information.
   */
  public static final int InvalidArgument = 1;

  /**
   * No speech unit exists with the provided id.
   */
  public static final int InvalidSpeechUnit = 2;

  /**
   * The requested action can not be performed in the current login state.
   */
  public static final int WrongLoginState = 3;

  /**
   * The request could not be forwarded to an external component (System Manager or MLC)
   */
  public static final int CannotSendRequest = 4;

  /**
   * The provided line is not available at the moment. Check connection to MLC.
   */
  public static final int LineUnavailable = 5;

  /**
   * The provided line is already in use for another call.
   */
  public static final int LineBusy = 6;

  /**
   * The provided speech unit is already in use for another call.
   */
  public static final int SpeechUnitBusy = 7;

  /**
   * There is no line available with the provided line name.
   */
  public static final int InvalidLine = 8;

  /**
   * There are no incoming calls on any line on the profile.
   */
  public static final int NoIncomingCall = 9;

  /**
   * No call can be picked up from the requested line as it is in idle state.
   */
  public static final int LineIsNotRinging = 10;

  /**
   * The requested action can not be performed because there is no call on the provided speech unit.
   */
  public static final int SpeechUnitHasNoCall = 11;

  /**
   * There are no free lines available to perform the requested action.
   */
  public static final int NoFreeLineAvailable = 12;

  /**
   * The specified action can not be performed
   */
  public static final int FunctionUnavailable = 13;

  /**
   * There is no consultation
   */
  public static final int NoConsultation = 14;

  /**
   * The Line is not in hold.
   */
  public static final int LineIsNotInHold = 15;

  /**
   * The provided login data is correct, the login process has been finished, the software is ready for use.
   */
  public static final int LoginSuccessful = 400;

  /**
   * Connection to the System Manager has been lost.
   */
  public static final int NoConnectionToSm = 401;

  /**
   * The provided username and/or password is incorrect.
   */
  public static final int AuthenticationFailed = 402;

  /**
   * The requested action failed due to a System Manager database operation error.
   */
  public static final int DatabaseError = 403;

  /**
   * No profile could be found with the specified name.
   */
  public static final int UnknownProfile = 404;

  /**
   * There was an error during the ldap authentication.
   */
  public static final int LdapError = 405;

  /**
   * The request was refused by the License Server.
   */
  public static final int LicenseNotAvailable = 406;

  /**
   * There was an error loading the certificate files for Thrift TLS notifications.
   */
  public static final int LoadTLSCertError = 407;

  /**
   * No ring transfer could be found with the provided identifier.
   */
  public static final int InvalidRingTransfer = 600;

  /**
   * The specified ring transfer is only for signalization, state can not be changed.
   */
  public static final int RingTransferIsOnlyForSignalization = 601;

  /**
   * The specified ring transfer is already in the requested state.
   */
  public static final int RingTransferIsAlreadyInThatState = 602;

  /**
   * The specified ring transfer not exists on the server. Try refreshing the config or contacting the system administrator.
   */
  public static final int RingTransferIsMissingOnServer = 603;

  /**
   * The specified ring transfer could not be activated because there this ring transfer is not configured on the controlled profile. Contact the system administrator.
   */
  public static final int RingTransferHasNoLocalInstance = 604;

  /**
   * The specified ring transfer could not be activated because the controlled profile is logged out.
   */
  public static final int RingTransferControlledProfileLoggedOut = 605;

  /**
   * The specified ring transfer could not be deactivated because it is the last active ring transfer in a keep active group.
   */
  public static final int RingTransferKagConflict = 606;

  /**
   * The ring transfer state change request timed out.
   */
  public static final int RingTransferStateChangeTimeout = 607;

  /**
   * No ring transfer sequence could be found with the provided identifier.
   */
  public static final int InvalidRingTransferSequence = 620;

  /**
   * The specified ring transfer sequence is only for signalization, state can not be changed.
   */
  public static final int RingTransferSequenceIsOnlyForSignalization = 621;

  /**
   * The specified ring transfer sequence is already in the requested state.
   */
  public static final int RingTransferSequenceIsAlreadyInThatState = 622;

  /**
   * The specified ring transfer sequence cannot be deactivated directly because it is not configured for inverting behavior.
   */
  public static final int RingTransferSequenceIsNotInverting = 623;

  /**
   * The specified ring transfer sequence not exists on the server. Try refreshing the config or contacting the system administrator.
   */
  public static final int RingTransferSequenceIsMissingOnServer = 624;

  /**
   * The ring transfer sequence state change request timed out.
   */
  public static final int RingTransferSequenceStateChangeTimeout = 625;

  /**
   * No interface action could be found with the provided api name.
   */
  public static final int InvalidInterfaceAction = 640;

  /**
   * The specified interface action is only for signalization, state can not be changed.
   */
  public static final int InterfaceActionIsOnlyForSignalization = 641;

  /**
   * The specified interface action is already in the requested state.
   */
  public static final int InterfaceActionIsAlreadyInThatState = 642;

  /**
   * The requested state can not be set for the specified interface action.
   */
  public static final int InvalidInterfaceActionState = 643;

  /**
   * Unexpected error has occured
   */
  public static final int Unknown = 9999;

}
